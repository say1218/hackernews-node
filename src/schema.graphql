  type Query {
    info: String!
    feed(filter: String, skip: Int, take: Int, orderBy: LinkOrderByInput): Feed!
    link(id: ID!): Link
  }

  type Mutation{
    post(url: String!, description: String!) : Link!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
  }

  type Subscription {
    newLink: Link
  }

  type Link{
    id: ID!
    description: String!
    url: String!
    postedBy: User
  }  

  type Feed {
   links: [Link!]!
   count: Int!
  }

  type AuthPayload {
    token: String
    user: User
  } 

 type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
 }

input LinkOrderByInput {
  description: Sort
  url: Sort
  createdAt: Sort
}

enum Sort {
  asc
  desc
}